# -*- coding: utf-8 -*-
"""task2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uNHjSmkZM2WvHO_EXYZL2mz7H4U4aR0A

# **Importing libraries**
"""

# Importing all libraries
import pandas as pd
import numpy as np  
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn import metrics

"""# **Reading data from url**"""

url = "http://bit.ly/w-data"
data = pd.read_csv(url)
print("Data imported")

data.head()

"""# **Data ploting**"""

data.plot(x='Hours', y='Scores',style='o')  
plt.title('Hours by Percentage')  
plt.xlabel('Hours Studied')  
plt.ylabel('Percentage Score in exam')  
plt.show()

"""# **Data spliting into attribute and lables**"""

X = data.iloc[:, :-1].values  
y = data.iloc[:, 1].values

"""# **Spliting the data**"""

X_train, X_test, y_train, y_test = train_test_split(X, y, 
                            test_size=0.2, random_state=0)

"""# **Training the Algorithm**"""

regressor = LinearRegression()  
regressor.fit(X_train, y_train)

# Plotting the regression line
line = regressor.coef_*X+regressor.intercept_

# Plotting for the test data
plt.scatter(X, y)
plt.plot(X, line);
plt.show()

"""# **Making Predictions**"""

print(X_test) # Testing data - In Hours
y_pred = regressor.predict(X_test) # Predicting the scores

# Comparing Actual vs Predicted
df = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})  
df

hours = np.array(9.25).reshape(-1,1)
own_pred = regressor.predict(hours)
print("No of Hours = {}".format(hours[0][0]))
print("Predicted Score = {}".format(own_pred[0]))

"""# **Evaluating the model**"""

print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))